name: Build Docker Image

on:
  push:
    branches:
      - main

jobs:
  node-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Uninstall previous docker
        run: |
          docker system prune --all --force --volumes
          sudo systemctl stop docker
          sudo apt-get purge docker-ce -y
          sudo apt-get autoremove --purge docker-ce -y
          sudo rm -rf /etc/docker
          sudo rm -rf /var/lib/docker
      - name: Install latest docker for experimental feature
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Docker version
        run: docker info
      - name: Experimental Status
        run: |
          docker version -f '{{.Server.Experimental}}'
      - name: enabling containerd with docker
        run: |
          echo $'{\n "exec-opts": ["native.cgroupdriver=cgroupfs"],\n   "cgroup-parent": "/actions_job",\n    "experimental": true,\n    "features": {\n    "containerd-snapshotter": true\n    }\n}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          docker version -f '{{.Server.Experimental}}'
          docker info -f '{{ .DriverStatus }}'
      - name: Docker version
        run: docker info
      - name: Generate Dockerfile
        run: |
          echo -e "FROM alpine\nCMD ["echo", "Hello StackOverflow!"]" > Dockerfile
          ls
          pwd
      - name: Download Qscanner
        run: |
          QSCANNER_URL=$(https://www.qualys.com/qscanner/download/v4.2.0/download_qscanner.sh)
          wget $QSCANNER_URL
          ls -ltr
          pwd
          sudo bash $(pwd)/download_qscanner.sh
      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx inspect
          docker buildx build --file /home/runner/work/dockerimage/dockerimage/Dockerfile --platform linux/arm64,linux/amd64 -t crmtestimage:multiid --load .
      - name: List docker images
        run: docker images
      - name: docker host and socket path
        run: |
         echo "Docker host: $DOCKER_HOST"
         ls -l /var/run/docker.sock
      - name: docker inspect
        run: |
         image_sha=$(docker inspect -f '{{.Id}}' crmtestimage:multiid)
         echo "Image SHA: $image_sha"
         docker history $image_sha
         docker inspect $image_sha
      - name: Qscanner token
        run: |
          export QUALYS_ACCESS_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJxdWF5czNiazEiLCJpc3MiOiJxYXMiLCJwb3J0YWxVc2VySWQiOjY0Mjk1MzEsInNlY3JldElkIjoiOGI3ZDg2NjQtMjcyZC00ZjRkLTg5MDMtZDBmZTI3YTMxOTU3IiwicXdlYlVzZXJJZCI6NTA3OTg1NiwiYXVkIjoicWFzIiwiY3VzdG9tZXJJZCI6NTE5ODY4LCJ1c2VyVXVpZCI6ImQ4MDRhMmZhLWQ5MTItNWY0ZC04MjY2LTRiZGZmZWRjYWE5YSIsInN1YnNjcmlwdGlvblV1aWQiOiI0ZTRiNTYyMy0xZjVjLWZiODAtODNhYS0xZmU1NzA0Zjk5MTEiLCJleHAiOjE3NTg2NzUwODcsInN1YnNjcmlwdGlvbklkIjo0OTIyNjUzLCJ0b2tlblR5cGUiOiJzdWJzY3JpcHRpb24iLCJpYXQiOjE3MjcxMTc0ODcsImp0aSI6IjAyZTMyZTMxLTEzOGYtNDNlNy1hMmE4LWY1OTNiZGZhZGZhOCJ9.e0thBA2jIg18pgtfGxffj8rIilb34C5YCXewMb2gTv7fD7qJxZR1YbGETprutOpI8FwxkntzJfkKHHg5QL2LVg
          echo $QUALYS_ACCESS_TOKEN
      - name: Image scan through Qscanner
        run: |
         image_sha=$(docker inspect -f '{{.Id}}' crmtestimage:multiid)
         echo "sudo $(pwd)/qscanner image $image_sha  --gateway-url https://gateway.qg3.apps.qualys.com/cms/cli/v1.0 --access-token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJxdWF5czNiazEiLCJpc3MiOiJxYXMiLCJwb3J0YWxVc2VySWQiOjY0Mjk1MzEsInNlY3JldElkIjoiOGI3ZDg2NjQtMjcyZC00ZjRkLTg5MDMtZDBmZTI3YTMxOTU3IiwicXdlYlVzZXJJZCI6NTA3OTg1NiwiYXVkIjoicWFzIiwiY3VzdG9tZXJJZCI6NTE5ODY4LCJ1c2VyVXVpZCI6ImQ4MDRhMmZhLWQ5MTItNWY0ZC04MjY2LTRiZGZmZWRjYWE5YSIsInN1YnNjcmlwdGlvblV1aWQiOiI0ZTRiNTYyMy0xZjVjLWZiODAtODNhYS0xZmU1NzA0Zjk5MTEiLCJleHAiOjE3NTg2NzUwODcsInN1YnNjcmlwdGlvbklkIjo0OTIyNjUzLCJ0b2tlblR5cGUiOiJzdWJzY3JpcHRpb24iLCJpYXQiOjE3MjcxMTc0ODcsImp0aSI6IjAyZTMyZTMxLTEzOGYtNDNlNy1hMmE4LWY1OTNiZGZhZGZhOCJ9.e0thBA2jIg18pgtfGxffj8rIilb34C5YCXewMb2gTv7fD7qJxZR1YbGETprutOpI8FwxkntzJfkKHHg5QL2LVg"
         sudo $(pwd)/qscanner image $image_sha  --gateway-url https://gateway.qg3.apps.qualys.com/cms/cli/v1.0 --access-token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJxdWF5czNiazEiLCJpc3MiOiJxYXMiLCJwb3J0YWxVc2VySWQiOjY0Mjk1MzEsInNlY3JldElkIjoiOGI3ZDg2NjQtMjcyZC00ZjRkLTg5MDMtZDBmZTI3YTMxOTU3IiwicXdlYlVzZXJJZCI6NTA3OTg1NiwiYXVkIjoicWFzIiwiY3VzdG9tZXJJZCI6NTE5ODY4LCJ1c2VyVXVpZCI6ImQ4MDRhMmZhLWQ5MTItNWY0ZC04MjY2LTRiZGZmZWRjYWE5YSIsInN1YnNjcmlwdGlvblV1aWQiOiI0ZTRiNTYyMy0xZjVjLWZiODAtODNhYS0xZmU1NzA0Zjk5MTEiLCJleHAiOjE3NTg2NzUwODcsInN1YnNjcmlwdGlvbklkIjo0OTIyNjUzLCJ0b2tlblR5cGUiOiJzdWJzY3JpcHRpb24iLCJpYXQiOjE3MjcxMTc0ODcsImp0aSI6IjAyZTMyZTMxLTEzOGYtNDNlNy1hMmE4LWY1OTNiZGZhZGZhOCJ9.e0thBA2jIg18pgtfGxffj8rIilb34C5YCXewMb2gTv7fD7qJxZR1YbGETprutOpI8FwxkntzJfkKHHg5QL2LVg
